// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Movies.Api.Data;

#nullable disable

namespace Movies.Api.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    partial class ApplicationDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.6")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Movies.Api.Features.Movies.Models.Genre", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Genres");

                    b.HasData(
                        new
                        {
                            Id = new Guid("2360343a-93d0-485f-8182-552434ae7179"),
                            Name = "Action"
                        },
                        new
                        {
                            Id = new Guid("d8f9dafa-f46e-4346-9fba-958434ad1823"),
                            Name = "Comedy"
                        },
                        new
                        {
                            Id = new Guid("e1020877-c97b-411a-8186-c554220bf5d2"),
                            Name = "Drama"
                        },
                        new
                        {
                            Id = new Guid("65fa3cc9-3f4d-42fb-8b1c-c1dcd789d6ec"),
                            Name = "Sci-Fi"
                        });
                });

            modelBuilder.Entity("Movies.Api.Features.Movies.Models.Movie", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<float>("AverageRating")
                        .HasColumnType("real");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ReleaseYear")
                        .HasColumnType("int");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Movies");

                    b.HasData(
                        new
                        {
                            Id = new Guid("5f0b0e0e-78d7-40c4-b439-da4256cec59d"),
                            AverageRating = 4.5f,
                            Description = "A thief who steals corporate secrets through the use of dream-sharing technology...",
                            ReleaseYear = 2010,
                            Title = "Inception"
                        },
                        new
                        {
                            Id = new Guid("2f053594-a04d-4b97-aa64-2b59745d4e96"),
                            AverageRating = 4.8f,
                            Description = "A computer hacker learns from mysterious rebels about the true nature of his reality...",
                            ReleaseYear = 1999,
                            Title = "The Matrix"
                        });
                });

            modelBuilder.Entity("Movies.Api.Features.Movies.Models.MovieGenre", b =>
                {
                    b.Property<Guid>("MovieId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("GenreId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("MovieId", "GenreId");

                    b.HasIndex("GenreId");

                    b.ToTable("MovieGenres");

                    b.HasData(
                        new
                        {
                            MovieId = new Guid("5f0b0e0e-78d7-40c4-b439-da4256cec59d"),
                            GenreId = new Guid("2360343a-93d0-485f-8182-552434ae7179")
                        },
                        new
                        {
                            MovieId = new Guid("5f0b0e0e-78d7-40c4-b439-da4256cec59d"),
                            GenreId = new Guid("65fa3cc9-3f4d-42fb-8b1c-c1dcd789d6ec")
                        },
                        new
                        {
                            MovieId = new Guid("2f053594-a04d-4b97-aa64-2b59745d4e96"),
                            GenreId = new Guid("2360343a-93d0-485f-8182-552434ae7179")
                        },
                        new
                        {
                            MovieId = new Guid("2f053594-a04d-4b97-aa64-2b59745d4e96"),
                            GenreId = new Guid("65fa3cc9-3f4d-42fb-8b1c-c1dcd789d6ec")
                        });
                });

            modelBuilder.Entity("Movies.Api.Features.Movies.Models.MovieRating", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<Guid>("MovieId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Rating")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("MovieId");

                    b.ToTable("MovieRatings");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            MovieId = new Guid("5f0b0e0e-78d7-40c4-b439-da4256cec59d"),
                            Rating = 5
                        },
                        new
                        {
                            Id = 2,
                            MovieId = new Guid("5f0b0e0e-78d7-40c4-b439-da4256cec59d"),
                            Rating = 4
                        },
                        new
                        {
                            Id = 3,
                            MovieId = new Guid("2f053594-a04d-4b97-aa64-2b59745d4e96"),
                            Rating = 5
                        });
                });

            modelBuilder.Entity("Movies.Api.Features.Movies.Models.MovieGenre", b =>
                {
                    b.HasOne("Movies.Api.Features.Movies.Models.Genre", "Genre")
                        .WithMany("MovieGenres")
                        .HasForeignKey("GenreId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Movies.Api.Features.Movies.Models.Movie", "Movie")
                        .WithMany("MovieGenres")
                        .HasForeignKey("MovieId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Genre");

                    b.Navigation("Movie");
                });

            modelBuilder.Entity("Movies.Api.Features.Movies.Models.MovieRating", b =>
                {
                    b.HasOne("Movies.Api.Features.Movies.Models.Movie", "Movie")
                        .WithMany("MovieRatings")
                        .HasForeignKey("MovieId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Movie");
                });

            modelBuilder.Entity("Movies.Api.Features.Movies.Models.Genre", b =>
                {
                    b.Navigation("MovieGenres");
                });

            modelBuilder.Entity("Movies.Api.Features.Movies.Models.Movie", b =>
                {
                    b.Navigation("MovieGenres");

                    b.Navigation("MovieRatings");
                });
#pragma warning restore 612, 618
        }
    }
}
